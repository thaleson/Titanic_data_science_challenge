import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix

def show_about():
    # Aplicando estilos personalizados usando CSS
    st.markdown("""
        <style>
            h1, h2, h3 {
                color: blue;
            }
            p {
                font-size: 16px;
                line-height: 1.6;
                color: #ffffff;
                text-align: justify;
            }
            .stButton > button {
                background-color: #4CAF50;
                color: white;
            }
            .stButton > button:hover {
                background-color: #45a049;
            }
        </style>
    """, unsafe_allow_html=True)

    # Carregando o dataset
    train_df = pd.read_csv('data/train.csv')

    st.title("Sobre o Projeto")
    st.header("Titanic challenge")

    # 1. Introdu√ß√£o ao Projeto
    st.write("""
    ### Introdu√ß√£o:
    üõ≥Ô∏è O Desafio de Data Science (Ci√™ncia de Dados) do Titanic √© uma das competi√ß√µes mais conhecidas dos cientistas de dados, promovida pelo Kaggle.com.

    üìà Este projeto √© considerado o "Hello, World!" do universo fant√°stico do Data Science, onde aplicamos t√©cnicas de an√°lise explorat√≥ria de dados e modelagem de Machine Learning para prever a sobreviv√™ncia dos passageiros do Titanic.

    üö¢ Com os dados reais disponibilizados, voc√™ pode analisar, testar hip√≥teses e construir modelos preditivos. Este tutorial aborda a an√°lise explorat√≥ria e a constru√ß√£o de modelos, divididos em duas partes.
    """)


    # Adicionando a imagem
    st.image('static/imgs/titanicimg.jpg', caption='Titanic', use_column_width=True)


    # Contexto Hist√≥rico
    st.write("""
    üì∞ **Contexto Hist√≥rico:**
    A trag√©dia do Titanic, que naufragou em 15 de abril de 1912 ap√≥s colidir com um iceberg, resultou na morte de 1502 pessoas de um total de 2224 passageiros.

    üõü Fatores como a falta de botes salva-vidas suficientes e decis√µes negligentes contribu√≠ram para o alto n√∫mero de v√≠timas. No entanto, alguns grupos de passageiros, como mulheres e crian√ßas, tiveram uma maior chance de sobreviv√™ncia.
    """)

    # Explica√ß√£o do Desafio
    st.write("""
    üéØ **Objetivo do Desafio:**
    Utilizando os dados dispon√≠veis, o objetivo √© analisar quais vari√°veis influenciaram a probabilidade de sobreviv√™ncia dos passageiros e construir um modelo preditivo para calcular essa probabilidade para qualquer passageiro.
    """)

    # 2. Passo a Passo da An√°lise
    st.write("""
    ### An√°lise Explorat√≥ria e Constru√ß√£o do Modelo:

    1. **Carregamento dos Dados**:
    ```python
    import pandas as pd
    train_df = pd.read_csv('data/train.csv')
    ```

    2. **Visualiza√ß√£o das Primeiras Linhas**:
    ```python
    train_df.head()
    ```
    """)
    st.write("Vamos visualizar as primeiras linhas do dataset:")
    st.write(train_df.head())

    # 3. Distribui√ß√£o da Idade dos Passageiros
    st.write("""
    3. **Distribui√ß√£o da Idade dos Passageiros**:
    ```python
    import matplotlib.pyplot as plt
    import seaborn as sns

    plt.figure(figsize=(10, 5))
    sns.histplot(train_df['Age'].dropna(), kde=False, bins=30)
    plt.title('Distribui√ß√£o da Idade dos Passageiros')
    plt.xlabel('Idade')
    plt.ylabel('Frequ√™ncia')
    plt.show()
    ```
    """)
    st.write("**Gr√°fico: Distribui√ß√£o da Idade dos Passageiros:**")
    fig, ax = plt.subplots(figsize=(10, 5))
    sns.histplot(train_df['Age'].dropna(), kde=False, bins=30, ax=ax)
    ax.set_title('Distribui√ß√£o da Idade dos Passageiros')
    ax.set_xlabel('Idade')
    ax.set_ylabel('Frequ√™ncia')
    st.pyplot(fig)

    # 4. An√°lise da Sobreviv√™ncia por Sexo
    st.write("""
    4. **An√°lise da Sobreviv√™ncia por Sexo**:
    ```python
    sns.countplot(x='Sex', hue='Survived', data=train_df)
    plt.title('Sobreviv√™ncia por Sexo')
    plt.xlabel('Sexo')
    plt.ylabel('Contagem')
    plt.show()
    ```
    """)
    st.write("**Gr√°fico: Sobreviv√™ncia por Sexo:**")
    fig, ax = plt.subplots(figsize=(10, 5))
    sns.countplot(x='Sex', hue='Survived', data=train_df, ax=ax)
    ax.set_title('Sobreviv√™ncia por Sexo')
    ax.set_xlabel('Sexo')
    ax.set_ylabel('Contagem')
    st.pyplot(fig)

    # 5. An√°lise da Sobreviv√™ncia por Classe
    st.write("""
    5. **An√°lise da Sobreviv√™ncia por Classe**:
    ```python
    sns.countplot(x='Pclass', hue='Survived', data=train_df)
    plt.title('Sobreviv√™ncia por Classe')
    plt.xlabel('Classe')
    plt.ylabel('Contagem')
    plt.show()
    ```
    """)
    st.write("**Gr√°fico: Sobreviv√™ncia por Classe:**")
    fig, ax = plt.subplots(figsize=(10, 5))
    sns.countplot(x='Pclass', hue='Survived', data=train_df, ax=ax)
    ax.set_title('Sobreviv√™ncia por Classe')
    ax.set_xlabel('Classe')
    ax.set_ylabel('Contagem')
    st.pyplot(fig)

    # 6. Modelo de An√°lise Utilizado
    st.write("""
    ### Modelo de An√°lise Utilizado:
    Utilizamos um modelo de **Regress√£o Log√≠stica** para prever a sobreviv√™ncia dos passageiros. A Regress√£o Log√≠stica √© um m√©todo estat√≠stico que modela a probabilidade de um evento ocorrer, neste caso, a sobreviv√™ncia.

    O processo de constru√ß√£o do modelo incluiu:

    1. **Pr√©-processamento dos Dados**: Tratamento de valores ausentes, codifica√ß√£o de vari√°veis categ√≥ricas e normaliza√ß√£o de dados num√©ricos.
    2. **Divis√£o do Dataset**: Separa√ß√£o dos dados em conjuntos de treino e teste para avalia√ß√£o da performance do modelo.
    3. **Treinamento do Modelo**: Ajuste do modelo de Regress√£o Log√≠stica aos dados de treino.
    4. **Avalia√ß√£o do Modelo**: Medi√ß√£o da acur√°cia e an√°lise da matriz de confus√£o para avaliar a capacidade preditiva do modelo.

    ```python
    from sklearn.model_selection import train_test_split
    from sklearn.linear_model import LogisticRegression
    from sklearn.metrics import accuracy_score, confusion_matrix

    # Pr√©-processamento dos Dados
    X = train_df[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']]
    y = train_df['Survived']

    # Remo√ß√£o de linhas com valores ausentes
    X = X.dropna()
    y = y[X.index]

    # Codifica√ß√£o das vari√°veis categ√≥ricas
    X['Sex'] = X['Sex'].map({'male': 0, 'female': 1})
    X['Embarked'] = X['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})

    # Divis√£o do Dataset
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Treinamento do Modelo
    model = LogisticRegression()
    model.fit(X_train, y_train)
    ```

    **Avalia√ß√£o do Modelo**:
    ```python
    # Avalia√ß√£o do Modelo
    y_pred = model.predict(X_test)
    acuracia = accuracy_score(y_test, y_pred)
    matriz_confusao = confusion_matrix(y_test, y_pred)

    # Exibi√ß√£o da Acur√°cia
    acuracia

    # Exibi√ß√£o da Matriz de Confus√£o
    matriz_confusao
    ```
    """)

    # Calcular e mostrar a acur√°cia e matriz de confus√£o
    X = train_df[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']]
    y = train_df['Survived']

    # Remo√ß√£o de linhas com valores ausentes
    X = X.dropna()
    y = y[X.index]

    # Codifica√ß√£o das vari√°veis categ√≥ricas
    X['Sex'] = X['Sex'].map({'male': 0, 'female': 1})
    X['Embarked'] = X['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})

    # Divis√£o do Dataset
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Treinamento do Modelo
    model = LogisticRegression()
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    acuracia = accuracy_score(y_test, y_pred)
    matriz_confusao = confusion_matrix(y_test, y_pred)

    # Exibi√ß√£o da Acur√°cia
    st.write("**Acur√°cia do Modelo:**")
    st.write(f"Acur√°cia: {acuracia:.2f}")

    # Exibi√ß√£o da Matriz de Confus√£o
    st.write("**Matriz de Confus√£o:**")
    st.write(matriz_confusao)

    # 7. Conclus√£o
    st.write("""
    ### Conclus√£o:
    Este projeto demonstra como um modelo de aprendizado de m√°quina pode ser aplicado para prever a sobreviv√™ncia em cen√°rios complexos, como o desastre do Titanic. Atrav√©s de uma an√°lise detalhada dos dados e da constru√ß√£o de um modelo preditivo, conseguimos obter uma acur√°cia razo√°vel, indicando que vari√°veis como classe social, sexo e idade tiveram um impacto significativo na probabilidade de sobreviv√™ncia.



    üîó Confira o c√≥digo completo no meu GitHub: [Thaleson Silva](https://github.com/thaleson)
    """)
